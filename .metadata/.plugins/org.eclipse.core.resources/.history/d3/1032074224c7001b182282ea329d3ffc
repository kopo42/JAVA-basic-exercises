import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

public class StockMain {

	public static void main(String[] args) throws ClassNotFoundException, SQLException, IOException {
		// TODO Auto-generated method stub
		
		Class.forName("com.mysql.cj.jdbc.Driver");
		Connection connect = DriverManager.getConnection("jdbc:mysql://192.168.23.72:33060/kopo42",
				"root", "kopo42"); //mysql 링크, 사용자, 비밀번호
		
		String Qutxt = "insert into dailystockprice (code, pdate, p_price, o_price, "
				+ "h_price, i_price, quty, amt)"
				+ "values (?, ?, ?, ?, ?, ?, ?, ?)"; //테이블에 데이터를 입력하는 쿼리
		
		PreparedStatement presta = connect.prepareStatement(Qutxt);
		//대용량 데이터의 빠른 입력을 위한 PreparedStatement
		//이를 사용하므로 위 values에 ?를 표시한다
		
		File file = new File("C:\\Users\\J\\Desktop\\source\\day_data\\test1.csv"); //파일 경로
		BufferedReader buffread = new BufferedReader (new FileReader(file)); //입력속도 향상
		
		String readtxt; //읽어온 파일을 한줄씩 저장하는 문자열
		
		int cnt = 0; //읽어들인 라인 수
		connect.setAutoCommit(false); //입력 속도 향상을 위한 설정 (자동 입력 false)
		long startTime = System.currentTimeMillis(); //시작 시간을 ms단위로 저장
		
		//에러처리
		String errstr = ""; //eprintstacktrace를 저장할 문자열
		int err_cnt = 0;
		List<String> errList = new ArrayList();
		String errdata = ""; //예외 세부사항을 저장
		
		while ((readtxt = buffread.readLine()) != null) { //파일 내용이 존재할 때
			String[] field = readtxt.split(","); //필드 저장
			System.out.println(field[0]);
			System.out.println(field[1]);
			
			//code, pdate, s_price, h_price i_price, c_price, quty, amt
			//structure txt 참고
			presta.setString(1, field[2]); //유가증권 단축 종목코드c
			presta.setString(2, field[1]); //주식 영업 일자pd
			presta.setString(3, field[3]); //종가 p
			presta.setString(4, field[4]); //주식 시가 o
			presta.setString(5, field[5]); //주식 최고가 h
			presta.setString(6, field[6]); //최저가 i
			presta.setString(7, field[11]); //누적 거래량
			presta.setString(8, field[12]); //누적 거래대금 
			presta.addBatch(); //addbatch 메소드 호출, 캐시에 sql문장 저장
			
			System.out.printf("[%d addBatch complete]\n", cnt);
			
			presta.clearParameters(); //파라미터 비우기
			cnt ++; //데이터 한 줄을 처리했으므로
			
			
			try {
				if(cnt % 10000 == 0) { //10000번마다
					presta.executeBatch();
					connect.commit();
				}	
			} catch (Exception e) {
				//e.printStackTrace(); //예외사항 파악
				err_cnt += 1;
				errstr = getPrintStackTrace(e);
				errList.add(errstr);
				
				
				errdata = errstr.substring(0, 200);

				//list = getErr(errdata);
				
				String TAG1 = "Exception:"; //공백확인
				String TAG2 = "at";
				
				errdata = errdata.substring(errdata.indexOf(TAG1));
				errdata = errdata.substring(0, (errdata.indexOf(TAG2)+8));
				errdata += "\n" + errdata;
			}
		}
			try { //반복문 종료 후 캐시에 남은 문장 실행
				presta.executeBatch();
			} catch (Exception e) {
				//e.printStackTrace();
				err_cnt += 1;
				errstr = getPrintStackTrace(e);
				errList.add(errstr);

				errdata = errstr.substring(0, 200);

				//list = getErr(errdata);
				
				String TAG1 = "Exception:"; //공백확인
				String TAG2 = "at";
				
				errdata = errdata.substring(errdata.indexOf(TAG1));
				errdata = errdata.substring(0, (errdata.indexOf(TAG2)+8));
				errdata += "\n" + errdata;
			}
			connect.commit(); //모든 insert가 완료되었으므로
			connect.setAutoCommit(true);
			long endTime = System.currentTimeMillis(); //종료시간 저장
			
			SimpleDateFormat simpledate = new SimpleDateFormat("YYYY-MM-dd HH:mm:ss.SSS");
			java.util.Date date1 = new java.util.Date();
			java.util.Date date2 = new java.util.Date();
			date1.setTime(startTime);
			date2.setTime(endTime);
			
			String datestr1 = simpledate.format(date1);
			String datestr2 = simpledate.format(date2);
			
			System.out.println("***Insert Complete***");
			System.out.printf("Total %d Records\n", cnt-1);
			System.out.printf("Started at %s\nEnded at %s\n", datestr1, datestr2);
			System.out.printf("Exceptions: %d exception detected\n", err_cnt);
			System.out.println(errdata);
			
			buffread.close(); //사용 후 닫기
			presta.close();
			connect.close();
		}
		public static String getPrintStackTrace(Exception e) {
	    StringWriter errors = new StringWriter();
	    e.printStackTrace(new PrintWriter(errors));
	    return errors.toString();
		}
}








































